; for xml and html reports, set the following enviromental variables
; mypy_args = "--html-report reports/mypy_report"
; pytest_args = "--junitxml=reports/junit-{env:OS:UNKNOWN_OS}-{envname}.xml --junit-prefix={env:OS:UNKNOWN_OS}  --basetemp={envtmpdir}"
; sphinx_args = "-W -b html -d {envtmpdir}/doctrees source  {envtmpdir}/html"
[tox]
envlist = py39, py310, py311, py312, py313
isolated_build = true

[tool:pytest]
testpath = tests
addopts = --verbose

[testenv]
setenv=
    TZ=UTC
deps =
    pytest
    -c requirements-dev.txt

commands=pytest --basetemp={env_tmp_dir} {posargs}


;; ======================== tests ========================

[testenv:docs]
changedir=docs
deps=
    sphinx
    -c requirements-dev.txt
commands=
    sphinx-build {env:sphinx_args:-W -b html -d {envtmpdir}/doctrees source  {distdir}/html}

[testenv:mypy]
deps =
    mypy
    lxml
    types-tzlocal
    -c requirements-dev.txt

skip_install=True
setenv = MYPY_CACHE_DIR = {temp_dir}/.mypy_cache
commands = mypy {posargs: -p pyhathiprep}

[testenv:flake8]
description = check the code style
deps =
    flake8
    -c requirements-dev.txt
skip_install=True
commands = flake8 {posargs: pyhathiprep}


[testenv:pylint]
description = check the code style
deps =
    pylint
    -c requirements-dev.txt
skip_install=True
commands =  pylint {posargs: pyhathiprep} --disable import-error


[testenv:pydocstyle]
skip_install = true
deps=
    pydocstyle
    -c requirements-dev.txt
commands =
    pydocstyle {posargs: {toxinidir}/pyhathiprep}

[testenv:bandit]
skip_install = true
deps=
    bandit
    -c requirements-dev.txt
commands =
    bandit {posargs: --recursive {toxinidir}/pyhathiprep}
